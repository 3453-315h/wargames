#!/usr/bin/python
#
# IDApython script to extract avoid address
# 

fcn_list = [
	0x6B8, 0x73C, 0x7C0, 0x844, 0x8C8, 0x94C, 0x9D0, 0xA54, 0xAD0, 0xB54, 0xBD0, 0xC54, 0xCD8, 0xD5C, 
	0xDE0, 0xE64, 0xEE8, 0xF6C, 0xFF0, 0x1074, 0x10F8, 0x117C, 0x1200, 0x1284, 0x1308, 0x138C, 0x1410, 
	0x1494, 0x1518, 0x159C, 0x1620, 0x16A4, 0x1720, 0x17A4, 0x1828, 0x18AC, 0x1930, 0x19B4, 0x1A38, 0x1ABC, 
	0x1B40, 0x1BC4, 0x1C48, 0x1CCC, 0x1D50, 0x1DD4, 0x1E58, 0x1EDC, 0x1F60, 0x1FE4, 0x2068, 0x20EC, 0x2170, 
	0x21F4, 0x2278, 0x22FC, 0x2380, 0x2404, 0x2488, 0x250C, 0x2590, 0x2614, 0x2698, 0x271C, 0x27A0, 0x281C
]

def get_avoid_address(func_ea):
	ea = FindBinary(func_ea, SEARCH_DOWN, "E8 03 00 32") # MOV W8, #1
	if ea != BADADDR:
		return ea
	return None

def main():
	base_addr = 0x400000
	avoid_addrs = []

	for f_ea in fcn_list:
		addr = get_avoid_address(f_ea)
		if addr:
			print("avoid addr: 0x%08x" % addr)
			avoid_addrs.append(base_addr+addr)

	print "AVOID = [" + ','.join(["0x%x" % addr for addr in avoid_addrs]) + "]"

if __name__ == '__main__':
	main()